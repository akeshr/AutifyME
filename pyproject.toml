[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "autifyme"
version = "0.1.0"
description = "Agentic Business Operating System"
authors = [{name = "AutifyME Team"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    # Core AI Framework (actually used)
    "langchain>=0.3.0",
    "langchain-openai>=0.1.0",
    "langchain-anthropic>=0.1.0",
    
    # Database & Security
    "supabase>=2.0.0",
    "cryptography>=41.0.0",
    
    # Core Utilities (actually used)
    "pydantic>=2.5.0",
    "pillow>=10.0.0",
    "requests>=2.31.0",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0", 
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
    "isort>=5.12.0",
    "bandit>=1.7.5",
    "safety>=2.3.0",
    "pre-commit>=3.5.0",
]
llm-providers = [
    # Additional LLM providers (OpenAI/Anthropic are in core)
    "langchain-google-genai>=1.0.0",
    "langchain-community>=0.2.0",
]
workflow = [
    # Workflow orchestration (when implemented)
    "langgraph>=0.2.0",
]
monitoring = [
    # AI monitoring and cost tracking (when implemented)
    "langsmith>=0.1.0",
]
google = [
    # Google services integration (when implemented)
    "google-api-python-client>=2.0.0",
    "google-auth>=2.0.0",
]
async = [
    # Async HTTP client (when needed)
    "aiohttp>=3.9.0",
]
config = [
    # Environment file loading (alternative to os.environ)
    "python-dotenv>=1.0.0",
]
web = [
    # Web interface dependencies
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "streamlit>=1.28.0",
]
data = [
    # Data processing dependencies
    "pandas>=2.1.0",
    "numpy>=1.24.0",
    "opencv-python>=4.8.0",
]

[project.urls]
Homepage = "https://github.com/autifyme/autifyme"
Repository = "https://github.com/autifyme/autifyme"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py311']

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
    "isort>=5.12.0",
    "bandit>=1.7.5",
    "safety>=2.3.0",
    "pre-commit>=3.5.0",
]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]